@turbo:: class Scene extends Shape {
    length: int32
    objects: Shape.Array

    @method init(SELF, objects) {
        var len = objects.length;
        SELF.length = len;
        var objs = @new Shape.Array(len);
        for ( var i=0 ; i < len ; i++ )
            Shape.Array.setAt(objs, i, objects[i]);
        SELF.objects = objs;
        return SELF;
    }

    @virtual intersect(SELF, eye, ray, min, max) {
        var min_obj = ll.Runtime.NULL;
        var min_dist = SENTINEL;

        var objs = SELF.objects;
        for ( var idx=0, limit=SELF.length ; idx < limit ; idx++ ) {
            var surf = Shape.Array.at(objs, idx);
            var tmp = Shape.intersect(surf, eye, ray, min, max);
            var obj = tmp.obj;
            var dist = tmp.dist;
            if (obj)
                if (dist >= min && dist < max)
                    if (dist < min_dist) {
                        min_obj = obj;
                        min_dist = dist;
                    }
        }
        return {obj:min_obj, dist:min_dist};
    }

} @end